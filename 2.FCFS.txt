#include<stdio.h>
#include<stdlib.h>

struct process {
    int pid;
    int atime;
    int btime;
    int ctime;
    int tatime;
    int wtime;
};

int main() {
    int i, j, n;
    float avg_wt = 0, avg_tat = 0, sum_wt = 0, sum_tat = 0;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    struct process p[n];

    printf("\nEnter the arrival time and burst time for each process:\n");
    for(i=0; i<n; i++) {
        printf("\nProcess %d\n", i+1);
        printf("Arrival time: ");
        scanf("%d", &p[i].atime);
        printf("Burst time: ");
        scanf("%d", &p[i].btime);
        p[i].pid = i+1;
    }

    // FCFS algorithm
    p[0].ctime = p[0].atime + p[0].btime;
    p[0].tatime = p[0].ctime - p[0].atime;
    p[0].wtime = p[0].tatime - p[0].btime;

    for(i=1; i<n; i++) {
        p[i].ctime = p[i-1].ctime + p[i].btime;
        p[i].tatime = p[i].ctime - p[i].atime;
        p[i].wtime = p[i].tatime - p[i].btime;
    }

    // Printing the table
    printf("\nPID\tAT\tBT\tCT\tTAT\tWT\n");
    for(i=0; i<n; i++) {
        printf("%d\t%d\t%d\t%d\t%d\t%d\n", p[i].pid, p[i].atime, p[i].btime, p[i].ctime, p[i].tatime, p[i].wtime);
        sum_wt += p[i].wtime;
        sum_tat += p[i].tatime;
    }

    avg_wt = sum_wt/n;
    avg_tat = sum_tat/n;

    printf("\nAverage waiting time: %f", avg_wt);
    printf("\nAverage turnaround time: %f\n", avg_tat);

    return 0;
}